package mimetic.desire.behaviour.ecg.problems;

import java.util.ArrayList;

import ec.EvolutionState;
import ec.Individual;
import ec.cgp.FitnessCGP;
import ec.cgp.genome.CGPIndividual;
import ec.simple.SimpleStatistics;

/**
 * This problem is used to evaluate a set of controlling programs for an agent.
 * 
 * 
 * 
 * @author Davide Nunes
 * 
 */
public class FitnessExploitation extends AbstractEvoBehaviourProblem {
	private static final long serialVersionUID = 1L;

	@Override
	public void evaluate(EvolutionState state, Individual ind,
			int subpopulation, int threadnum) {

		ArrayList<Double> fitnessRecord = super.behaviour
				.getFitnessRecord((CGPIndividual) ind);
		if (fitnessRecord == null) {
			throw new RuntimeException(
					"FitnessExploitation Problem is trying to retrieve a fitness record for an individual that was not evaluated, probably, evolve was called before all the controllers could be evaluated");
		} else {
			float fitness = 0;
			for (Double f : fitnessRecord) {
				fitness += f;
			}
			fitness /= fitnessRecord.size();

			// change false to the condition of being ideal
			((FitnessCGP) ind.fitness).setFitness(state, fitness, false);
			ind.evaluated = true;
		}

		
	

	}

}
